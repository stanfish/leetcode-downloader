<p>Given an absolute path for a file (Unix-style), simplify it.&nbsp;</p>

<p>For example,<br />
<strong>path</strong> = <code>&quot;/home/&quot;</code>, =&gt; <code>&quot;/home&quot;</code><br />
<strong>path</strong> = <code>&quot;/a/./b/../../c/&quot;</code>, =&gt; <code>&quot;/c&quot;</code><br />
<strong>path</strong> = <code>&quot;/a/../../b/../c//.//&quot;</code>, =&gt; <code>&quot;/c&quot;</code><br />
<strong>path</strong> = <code>&quot;/a//b////c/d//././/..&quot;</code>, =&gt; <code>&quot;/a/b/c&quot;</code></p>

<p>In a UNIX-style file system, a period (&#39;.&#39;) refers to the current directory, so it can be ignored in a simplified path. Additionally, a double period (&quot;..&quot;) moves up a directory, so it cancels out whatever the last directory was. For more information, look here:&nbsp;<a href="https://en.wikipedia.org/wiki/Path_(computing)#Unix_style">https://en.wikipedia.org/wiki/Path_(computing)#Unix_style</a></p>

<p><strong>Corner Cases:</strong></p>

<ul>
	<li>Did you consider the case where <strong>path</strong> = <code>&quot;/../&quot;</code>?<br />
	In this case, you should return <code>&quot;/&quot;</code>.</li>
	<li>Another corner case is the path might contain multiple slashes <code>&#39;/&#39;</code> together, such as <code>&quot;/home//foo/&quot;</code>.<br />
	In this case, you should ignore redundant slashes and return <code>&quot;/home/foo&quot;</code>.</li>
</ul>
